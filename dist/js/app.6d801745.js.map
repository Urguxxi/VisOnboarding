{"version":3,"file":"js/app.6d801745.js","mappings":"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","sources":["webpack://client/./src/App.vue","webpack://client/./src/App.vue?7ccd","webpack://client/./src/views/HomeView.vue","webpack://client/./src/components/HelloWorld.vue","webpack://client/./src/components/HelloWorld.vue?bd04","webpack://client/./src/views/HomeView.vue?1da1","webpack://client/./src/views/AtlasView.vue","webpack://client/./src/components/AtlasSidebar.vue","webpack://client/./src/components/AtlasSidebar.vue?6133","webpack://client/./src/components/AtlasViz.vue","webpack://client/./src/components/AtlasViz.vue?ad7c","webpack://client/./src/components/AtlasLegend.vue","webpack://client/./src/components/AtlasLegend.vue?56c2","webpack://client/./src/components/HexViz.vue","webpack://client/./src/data/cidsData.js","webpack://client/./src/components/HexViz.vue?dfdf","webpack://client/./src/components/IntroTitle.vue","webpack://client/./src/components/IntroTitle.vue?5cb6","webpack://client/./src/views/AtlasView.vue?9370","webpack://client/./src/router/index.js","webpack://client/./src/main.js","webpack://client/./src/assets/ sync ^\\.\\/.*\\.png$","webpack://client/webpack/bootstrap","webpack://client/webpack/runtime/chunk loaded","webpack://client/webpack/runtime/compat get default export","webpack://client/webpack/runtime/define property getters","webpack://client/webpack/runtime/ensure chunk","webpack://client/webpack/runtime/get javascript chunk filename","webpack://client/webpack/runtime/get mini-css chunk filename","webpack://client/webpack/runtime/global","webpack://client/webpack/runtime/hasOwnProperty shorthand","webpack://client/webpack/runtime/load script","webpack://client/webpack/runtime/make namespace object","webpack://client/webpack/runtime/publicPath","webpack://client/webpack/runtime/jsonp chunk loading","webpack://client/webpack/startup"],"sourcesContent":["<template>\n  <div style=\"display:flex\">\n    <h1>IPCC WGI Interactive Atlas Onboarding Project</h1>\n    <nav>\n      <router-link to=\"/\">Home</router-link> |\n      <!-- <router-link to=\"/about\">About</router-link> | -->\n      <router-link to=\"/atlas\">Atlas❤️</router-link>\n    </nav>\n  </div>\n\n  <router-view/>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=3531af6b\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=3531af6b&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"home\">\n    <img alt=\"SHA logo\" src=\"../assets/SHA.png\">\n    <HelloWorld msg=\"Welcome to Shannon's Altas Onboarding App\"/>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\n\nexport default {\n  name: 'HomeView',\n  components: {\n    HelloWorld\n  }\n}\n</script>\n\n<style>\n.home{\n  margin-top: 100px;\n}\n</style>\n","<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <p>\n      For more information about the author,<br>\n      please check out the\n      <a href=\"shannonma.fr\" target=\"_blank\" rel=\"noopener\">Shannon's Portfolio</a>.\n    </p>\n    <h3>Contacts</h3>\n    <ul>\n      <li><a href=\"https://www.linkedin.com/in/shannon-ma-34347b221/\" target=\"_blank\" rel=\"noopener\">LinkedIn</a></li>\n      <li><a href=\"shannonma84@gmail.com\" target=\"_blank\" rel=\"noopener\">Email</a></li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./HelloWorld.vue?vue&type=template&id=e3a807b4&scoped=true\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=e3a807b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e3a807b4\"]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=7995d2b0\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=7995d2b0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"altasView\">\n      <AtlasSidebar class=\"left\" @cid-selection-changed=\"updateSelectedCIDs\" ref=\"sidebarComponent\"/>\n      <AtlasLegend class=\"right-bottom\" :visualization-mode=\"visualizationMode\" @visualization-mode-changed=\"updateActiveVisualizationMode\"/>\n      <IntroTitle class=\"right-top\" :isChecked=\"isHexVizActive\" @toggleChanged=\"handleToggle\" @hexClicked=\"handleHexClick\" @backToAtlas=\"handleBackToAtlas\"/>\n      <component class=\"right-top\" :is=\"currentComponent\" :selected-cids=\"selectedCIDs\" :visualization-mode=\"visualizationMode\" :display-config=\"currentDisplayConfig\" @toggleChanged=\"handleToggle\" />        \n    </div>\n    <br>\n</template>\n  \n\n<script>\nimport AtlasSidebar from '@/components/AtlasSidebar.vue'\nimport AtlasViz from '@/components/AtlasViz.vue'\nimport AtlasLegend from '@/components/AtlasLegend.vue'\nimport HexViz from '@/components/HexViz.vue'\nimport IntroTitle from '@/components/IntroTitle.vue'\n\nexport default {\n  name: 'AtlasView',\n  components: {\n    AtlasSidebar,\n    AtlasViz,\n    AtlasLegend,\n    HexViz,\n    IntroTitle,\n  },\n  data(){\n    return{\n      currentComponent:'AtlasViz',\n      isHexVizActive: false,\n      selectedCIDs:[],\n      visualizationMode:{\n        futureProjection: false,\n        confidence: false,\n        observedTrend: false,\n        attribution: false,\n      }\n    }\n  },\n  watch: {\n    visualizationMode: {\n      handler(newValue) {\n        console.log('Updated visualizationMode:', newValue);\n      },\n      deep: true  // This ensures the watcher triggers even for nested property changes\n    },\n    selectedCIDs:{\n      handler(newValue) {\n        console.log('Updated selectedCIDs:', newValue);\n      },\n      deep: true  // This ensures the watcher triggers even for nested property changes\n    }\n  },\n  computed:{\n    currentDisplayConfig(){\n      // generate a configuration based on the selected CIDs and visualization mode\n      // return this.generateDisplayConfig(this.selectedCIDs, this.visualizationMode);\n      return this.generateDisplayConfig();\n    }\n  },\n  methods:{\n    handleHexClick(){\n      this.currentComponent = 'HexViz';\n    },\n    handleBackToAtlas(){\n      this.currentComponent = 'AtlasViz';\n    },\n    handleToggle(){\n      this.isHexVizActive = !this.isHexVizActive;\n      this.currentComponent = this.currentComponent === 'AtlasViz' ? 'HexViz':'AtlasViz';\n      this.resetAllStates();\n    },\n    // To reset the buttons and checkboxes into default\n    resetAllStates(){\n      this.visualizationMode = {\n        futureProjection: false,\n        confidence: false,\n        observedTrend: false,\n        attribution: false,\n      };\n      // When reset the checkbox, the selected CIDs will be reset as well\n      this.$refs.sidebarComponent.resetCheckboxes();\n    },\n    // To update the CIDs selected in the sidebar\n    updateSelectedCIDs(selectedItems){\n      this.selectedCIDs = selectedItems;\n    },\n    // To update which properties of CIDs to be shown\n    updateActiveVisualizationMode(mode){\n      // Toggle mode activation\n      if (this.visualizationMode[mode]){\n        this.visualizationMode[mode] = false;\n        // confidence depends on the existence of futureProjection\n        if(mode === \"futureProjection\"){\n          this.visualizationMode[\"confidence\"] = false;\n        }\n        else if(mode === \"observedTrend\"){\n          this.visualizationMode[\"attribution\"] = false;\n        }\n      }\n      else{\n        // The update should take the dependencied into consideration\n        if (mode === 'confidence' && !this.visualizationMode.futureProjection){\n          alert(\"Confidence requires Future Proejection to be active...\");\n          return;\n        }\n        if (mode === 'attribution' && !this.visualizationMode.observedTrend){\n          alert(\"Attribution requires Observed Trend to be active...\");\n          return;\n        }        \n        this.visualizationMode[mode] = true;\n      }\n    },\n    // cids,mode\n    generateDisplayConfig(){\n      // const config = {\n      //   triangles:[], // arrays to hold the triangle configurations\n      //   messages:[], // msg or description to be displayed\n      // };\n\n      // // To define how many triangles each CID will occuoy\n      // const trianglesPerCID = {\n      //   1: 6, // 1 CID selected, occupy 6 triangles\n      //   2: 3,\n      //   3: 2,\n      //   4: 1, // the other 2 stay blank\n      //   5: 1,\n      //   6: 1,\n      // };\n\n      // const numCIDs = cids.length;\n      // const numTriangles = trianglesPerCID[numCIDs] || 0;\n\n      // // Generate triangles for each CID\n      // cids.forEach((cid, index) => {\n      //   for (let i = 0, i < numTriangles; i++){\n      //     config.triangles.push({\n      //       cid: cid,\n      //       mode: this.determineMode(modes, cid)\n      //     });\n      //   }\n      // });\n\n    },\n  }\n}\n</script>\n\n<style>\n.altasView{\n  display: grid;\n  @media{\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: repeat(5, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 0px;\n  }\n}\n.left{\n  grid-area: 1 / 1 / 6 / 2;\n}\n.right-top{\n  grid-area: 1 / 2 / 5 / 6;\n}\n.right-bottom{\n  grid-area: 5 / 2 / 6 / 6;\n}\n\n.container{\n  display: grid;\n  grid-template-rows: 1fr 5fr 1fr;\n  grid-template-columns: 2fr 5fr 3fr;\n  grid-template-areas: \n    \"header header header\"\n    \"nav main aside\"\n    \"footer footer footer\";\n  grid-gap: .75em;        \n  height: 100vh;\n  @media(max-width: 768px){\n    grid-template-rows: 1fr 1fr 5fr 1fr;\n    grid-template-columns: 2fr 5fr 3fr;\n    grid-template-areas: \n    \"header header header\"\n    \"nav nav nav\"\n    \"main main aside\"    \n    \"footer footer footer\";    \n  }\n  @media(max-width: 480px){\n    display: block;\n  }\n  header{\n    grid-area: header;\n    background-color: teal; \n  }\n  nav{\n    grid-area: nav;\n    background-color: tomato;\n  }\n  main{\n    grid-area: main;\n    background-color: lightblue;\n  }\n  aside{\n    grid-area: aside;\n    background-color: orange;\n  }\n  footer{\n    grid-area: footer;\n    background-color: lightgreen;\n  }\n}\n</style>","<template>\n    <div class=\"sidebar\">\n        <h3 class=\"title\">Choose from CIDs</h3>\n        <div v-for=\"(category, index) in categories\" :key=\"index\" class=\"category\">\n            <div class=\"category-container\">\n                \n                <h3>{{category.name}}</h3>    \n                \n                <div>\n                    \n                    <div class=\"items\" :style=\"{ position:'relative' }\">\n                        <div class=\"color-bar\" :style=\"{ backgroundColor: getCategoryColor(category.name), height:calculateBarHeight(category.items.length)}\"></div>\n                        <div v-for=\"item in category.items\" :key=\"item.name\" class=\"item\">\n                            <input type=\"checkbox\" v-model=\"item.selected\" :id=\"item.name\" @change=\"emitSelectedCIDs\" :disabled=\"item.disabled\">\n                            <label :for=\"item.name\">{{item.name}}</label>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            \n        </div>\n    </div>\n</template>\n\n<script>\n    export default{\n        data(){\n\n            return{\n                categories:[\n                    {\n                        name:\"Heat and Cold\",\n                        items:[\n                            {name: \"Mean surface temperature\", selected: false, disabled: true},\n                            {name: \"Extreme heat\", selected: false, disabled: true},\n                            {name: \"Cold spell\", selected: false, disabled: false},\n                            {name: \"Frost\", selected:false, disabled: true},\n                        ]\n                    },\n                    {\n                        name:\"Wet and Dry\",\n                        items:[\n                            {name: \"Mean precipitation\", selected: false, disabled: true},\n                            {name: \"River flood\", selected: false, disabled: false},\n                            {name: \"Heavy preciption and pluvial flood\", selected: false, disabled: true},\n                            {name: \"Landslide\", selected: false, disabled: true},\n                            {name: \"Aridity\", selected: false, disabled: true},\n                            {name: \"Hydrological drought\", selected: false, disabled: true},\n                            {name: \"Agricultural and ecological drought\", selected: false, disabled: true},\n                            {name: \"Fire weather\", selected: false, disabled: true},\n                        ]\n                    },\n                    {\n                        name: \"Wind\",\n                        items: [\n                            {name: \"Mean wind speed\", selected: false, disabled: true},\n                            {name: \"Severe wind storm\", selected: false, disabled: false},\n                            {name: \"Tropical cyclone\", selected: false, disabled: true},\n                            {name: \"Sand and dust storm\", seleted: false, disabled: true},\n                        ]\n                    },\n                    {\n                        name:\"Snow and Ice\",\n                        items:[\n                            {name: \"Snow, glacier and ice sheet\", selected: false, disabled: true},\n                            {name: \"Permafrost\", selected: false, disabled: false},\n                            {name: \"Lake, river and sea ice\", selected: false, disabled: true},\n                            {name: \"Heavy snowfall and ice storm\", selected: false, disabled: true},\n                            {name: \"Hail\", selected: false, disabled: true},\n                            {name: \"Snoe avalanche\", selected: false, disabled: true},\n                        ]\n                    },\n                    {\n                        name: \"Coastal\",\n                        items:[\n                            {name: \"Relative sae level\", selected: false, disabled: true},\n                            {name: \"Coastal flood\", selected: false, disabled: false},\n                            {name: \"Coastal erosion\", selected: false, disabled: true},\n                            {name: \"Marine heatwave\", selected: false, disabled: true},\n                            {name: \"Ocean acidity\", selected: false, disabled: true},\n                        ]\n                    },\n                    {\n                        name: \"Others\",\n                        items: [\n                            {name: \"Air pollution weather\", selected: false, disabled: true},\n                            {name: \"Atmospheric CO₂ at surface\", selected: false, disabled: true},\n                            {name: \"Radiation at surface\", selected: false, disabled: false},\n\n                        ]\n                    }\n                ]\n            }\n        },\n        methods:{\n            // To update the selected CIDs and emit the event in AtlasView.vue\n            emitSelectedCIDs(){\n                let selectedItems = [];\n                this.categories.forEach(category => {\n                    category.items.forEach(item =>{\n                        if (item.selected){\n                            selectedItems.push(item.name);\n                        }\n                    })\n                })\n                this.$emit('cid-selection-changed',selectedItems);\n            },\n            resetCheckboxes(){\n                this.categories.forEach(category => {\n                    category.items.forEach(item => {\n                        item.selected = false;\n                    })\n                })\n                this.emitSelectedCIDs();\n            },\n            getCategoryColor(categoryName) {\n                switch (categoryName) {\n                    case 'Heat and Cold': return '#4BB132';\n                    case 'Wet and Dry': return '#EF8F37';\n                    case 'Wind': return '#C1A0CA';\n                    case 'Snow and Ice': return '#FA4F97';\n                    case 'Coastal': return '#A3CF5B';\n                    case 'Others': return '#EFDD3A';\n                    default: return '#000'; // Default color if category not matched\n                }\n            },\n            calculateBarHeight(itemCount) {\n                const baseHeight = 21; // Base height per item\n                return `${baseHeight * itemCount}px`; // Adjust this formula as needed\n            },\n        },\n    }\n</script>\n\n<style>\n.sidebar{\n    background-color: rgb(198, 224, 196);\n    text-align: left;\n    max-height: 100%;\n    overflow-y: auto;\n}\n.sidebar .category-container{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n.color-bar{\n    position: absolute;\n    width: 5px;\n    height: 100%;\n}\n.items{\n    padding-left: 10px;\n}\n.category h3{\n    font-size: 16px;\n    margin-top: 3px;\n    margin-bottom: 1px;\n}\n.items .item{\n    font-size: 13px;\n    margin-bottom: 1px;\n    padding-left: 10px;\n}\n.title{\n    font-size: 22px;\n    font-weight: 800;\n    margin: 0%;\n}\n</style>","import { render } from \"./AtlasSidebar.vue?vue&type=template&id=b4ce0cda\"\nimport script from \"./AtlasSidebar.vue?vue&type=script&lang=js\"\nexport * from \"./AtlasSidebar.vue?vue&type=script&lang=js\"\n\nimport \"./AtlasSidebar.vue?vue&type=style&index=0&id=b4ce0cda&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"viz\" ref=\"vizContainer\">\n        <h4 class=\"atlasTitle\">The IPCC AR6 WGI inhabited regions are displayed as hexagons with identical size in their approximate geographical location (see legend for regional acronyms). </h4>\n    </div>\n</template>\n\n<style>\n.viz{\n    background-color:lightsteelblue;\n    margin-left:10px;\n    max-height: 100%;\n}\n.atlasTitle{\n    margin-left:400px;\n    margin-right: 60px;\n    text-align: right;\n}\n</style>\n\n<script>\nimport * as d3 from 'd3';\nexport default {\n  name: 'AtlasViz',\n  template: '<div></div>',\n  props: ['selectedCIDs', 'visualizationMode','displayConfig'],\n  mounted() {\n    this.renderViz();\n    },\n    watch:{\n        selectedCIDs:{\n            handler(){\n                this.renderViz();\n            },\n            deep: true\n        },\n        visualizationMode:{\n            handler(){\n                this.renderViz();\n            },\n            deep: true\n        }\n    },\n\n  methods:{\n    handleClick(){\n        this.$emit('toggleChanged');\n    },\n    handleBackClick(){\n        this.$emit('backToAtlas');\n    },\n    renderViz(){\n        const container = d3.select(this.$refs.vizContainer);\n        container.selectAll('svg').remove(); // To clear up the canva to redraw\n\n        const svg = d3.select(this.$el)\n        .append('svg')\n        .attr('width', 1500)\n        .attr('height', 586)\n        .append('g')\n        .attr('transform', 'translate(20, 0)');\n\n        //Set the points of hexagons\n        const hexagonPoints = (radius) => {\n        const halfWidth = radius * Math.sqrt(3) / 2;\n        return `\n            0,${-radius}\n            ${halfWidth},${-radius / 2}\n            ${halfWidth},${radius / 2}\n            0,${radius}\n            ${-halfWidth},${radius / 2}\n            ${-halfWidth},${-radius / 2}`;\n        };\n\n        // the function to draw the hexagons dynamically\n        const drawAtlas = (hexRadius,x,y) =>{\n            // the deviation of hex on x-axis/y-axis\n            const dx = hexRadius * Math.sqrt(3)/2;\n            const dy = hexRadius * 3 / 4;\n\n            // American continent\n            // #1 add the North-Western North America\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x},${y})`)\n            .attr('id', 'nwn')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #2 add the north-eastern north america\n            const x2 = x+dx*2;\n            const y2 = y;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x2},${y2})`)\n            .attr('id','nen')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #3 add the western north america\n            const x3 = x-dx;\n            const y3 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x3},${y3})`)\n            .attr('id','wna')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #4 add the central north america\n            const x4 = x+dx;\n            const y4 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x4},${y4})`)\n            .attr('id','cna')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #5 add the eastern north america\n            const x5 = x+dx*3;\n            const y5 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x5},${y5})`)\n            .attr('id','ena')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #6 add the greenland/iceland\n            const x6 = x+dx*4+15;\n            const y6 = y-15;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x6},${y6})`)\n            .attr('id','gic')\n            .style('stroke', 'red')\n            .style('fill', 'lightblue')\n            .attr('stroke-width', 2);\n\n            // #7 add the northern central america\n            const x7 = x;\n            const y7 = y+dy*4;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x7},${y7})`)\n            .attr('id','nca')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #8 add the southern central america\n            const x8 = x+dx;\n            const y8 = y+dy*6;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x8},${y8})`)\n            .attr('id','sca')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #9 add the caribbean\n            const x9 = x+dx*3;\n            const y9 = y+dy*6;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x9},${y9})`)\n            .attr('id','car')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #10 add the north-western south america\n            const x10 = x+dx*4;\n            const y10 = y+dy*8;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x10},${y10})`)\n            .attr('id','nws')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #11 add the northern south america\n            const x11 = x+dx*6;\n            const y11 = y+dy*8;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x11},${y11})`)\n            .attr('id','nsa')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #12 add the south america monsoon\n            const x12 = x+dx*5;\n            const y12 = y+dy*10;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x12},${y12})`)\n            .attr('id','sam')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #13 add the north-eastern south america\n            const x13 = x+dx*7;\n            const y13 = y+dy*10;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x13},${y13})`)\n            .attr('id','nes')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #14 add the south-western south america\n            const x14 = x+dx*4;\n            const y14 = y+dy*12;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x14},${y14})`)\n            .attr('id','sws')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #15 add the south-eastern south america\n            const x15 = x+dx*6;\n            const y15 = y+dy*12;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x15},${y15})`)\n            .attr('id','ses')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #16 add the southern south america\n            const x16 = x+dx*5;\n            const y16 = y+dy*14;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x16},${y16})`)\n            .attr('id','ssa')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // European continent\n            // #17 add the northern europe\n            const x17 = x+dx*12;\n            const y17 = y;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x17},${y17})`)\n            .attr('id','neu')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #18 add the western and central europe\n            const x18 = x+dx*11;\n            const y18 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x18},${y18})`)\n            .attr('id','wce')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #19 add the eastern europe\n            const x19 = x+dx*13;\n            const y19 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x19},${y19})`)\n            .attr('id','eeu')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n            \n            // #20 add the mediterranean\n            const x20 = x+dx*12;\n            const y20 = y+dy*4;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x20},${y20})`)\n            .attr('id','med')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // African continent\n            // #21 add the sahara\n            const x21 = x+dx*11;\n            const y21 = y+dy*6;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x21},${y21})`)\n            .attr('id','sah')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n            \n            // #22 add the arabian peninsula\n            const x22 = x+dx*13;\n            const y22 = y+dy*6;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x22},${y22})`)\n            .attr('id','arp')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #23 add the western africa\n            const x23 = x+dx*10;\n            const y23 = y+dy*8;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x23},${y23})`)\n            .attr('id','waf')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n            \n            // #24 add the central africa\n            const x24 = x+dx*12;\n            const y24 = y+dy*8;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x24},${y24})`)\n            .attr('id','caf')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #25 add the north eastern africa\n            const x25 = x+dx*14;\n            const y25 = y+dy*8;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x25},${y25})`)\n            .attr('id','neaf')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #26 add the west southern africa\n            const x26 = x+dx*11;\n            const y26 = y+dy*10;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x26},${y26})`)\n            .attr('id','wsaf')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #27 add the south eastern africa\n            const x27 = x+dx*13;\n            const y27 = y+dy*10;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x27},${y27})`)\n            .attr('id','seaf')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #28 add the east southern africa\n            const x28 = x+dx*12;\n            const y28 = y+dy*12;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x28},${y28})`)\n            .attr('id','esaf')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #29 add the south madagascar\n            const x29 = x+dx*15+10;\n            const y29 = y+dy*10+10;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x29},${y29})`)\n            .attr('id','mdg')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // Asian continent\n            // #30 add the west siberia\n            const x30 = x+dx*15;\n            const y30 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x30},${y30})`)\n            .attr('id','wsb')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #31 add the east siberia\n            const x31 = x+dx*17;\n            const y31 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x31},${y31})`)\n            .attr('id','esb')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #32 add the russian far east\n            const x32 = x+dx*19;\n            const y32 = y+dy*2;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x32},${y32})`)\n            .attr('id','esb')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #33 add the russian arctic\n            const x33 = x+dx*18;\n            const y33 = y;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x33},${y33})`)\n            .attr('id','rar')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #34 add the west central asia\n            const x34 = x+dx*14;\n            const y34 = y+dy*4;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x34},${y34})`)\n            .attr('id','wca')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #35 add the east central asia\n            const x35 = x+dx*16;\n            const y35 = y+dy*4;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x35},${y35})`)\n            .attr('id','eca')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #36 add the tibetant plateau\n            const x36 = x+dx*18;\n            const y36 = y+dy*4;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x36},${y36})`)\n            .attr('id','tib')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #37 add the east asia\n            const x37 = x+dx*20;\n            const y37 = y+dy*4;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x37},${y37})`)\n            .attr('id','eas')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #38 add the south asia\n            const x38 = x+dx*17;\n            const y38 = y+dy*6;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x38},${y38})`)\n            .attr('id','sas')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #39 add the south east asia\n            const x39 = x+dx*21;\n            const y39 = y+dy*6;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x39},${y39})`)\n            .attr('id','sea')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // Oceania\n            // #40 add the pacific small islands\n            const x40 = x+dx*25+10;\n            const y40 = y+dy*7;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x40},${y40})`)\n            .attr('id','pac')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #41 add the northern australia\n            const x41 = x+dx*22;\n            const y41 = y+dy*9;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x41},${y41})`)\n            .attr('id','nau')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #42 add the central australia\n            const x42 = x+dx*21;\n            const y42 = y+dy*11;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x42},${y42})`)\n            .attr('id','cau')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #43 add the eastern australia\n            const x43 = x+dx*23;\n            const y43 = y+dy*11;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x43},${y43})`)\n            .attr('id','eau')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #44 add the southern australia\n            const x44 = x+dx*22;\n            const y44 = y+dy*13;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x44},${y44})`)\n            .attr('id','cau')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #45 add the new zealand\n            const x45 = x+dx*24+15;\n            const y45 = y+dy*13+10;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x45},${y45})`)\n            .attr('id','nz')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // Antarctic\n            // #46 add the west antarctic\n            const x46 = x+dx*12;\n            const y46 = y+dy*16;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x46},${y46})`)\n            .attr('id','wan')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n            // #47 add the east antarctic\n            const x47 = x+dx*14;\n            const y47 = y+dy*16;\n            svg.append('polygon')\n            .attr('points', hexagonPoints(hexRadius))\n            .attr('transform', `translate(${x47},${y47})`)\n            .attr('id','ean')\n            .style('stroke', 'darkgrey')\n            .style('fill', 'none')\n            .attr('stroke-width', 1.5);\n\n        }\n\n        // set a deault radius\n        const hexRadius = 38;\n        const x = 150;\n        const y = 60;\n        drawAtlas(hexRadius,x,y);\n\n        // The small legend\n        svg.append('polygon')\n        .attr('points',hexagonPoints(50))\n        .attr('transform','translate(100,400)')\n        .attr('id','ice')\n        .style('stroke','pink')\n        .style('fill','lightgrey')\n        .style('stroke-width',3);\n\n        svg.select('#gic').on('click',()=>{this.handleClick()});\n\n    },\n  },\n\n};\n\n</script>","import { render } from \"./AtlasViz.vue?vue&type=template&id=241b1516\"\nimport script from \"./AtlasViz.vue?vue&type=script&lang=js\"\nexport * from \"./AtlasViz.vue?vue&type=script&lang=js\"\n\nimport \"./AtlasViz.vue?vue&type=style&index=0&id=241b1516&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"lengend\">\n        <!-- <button v-for=\"mode in ['futureProjection', 'confidence', 'observedTrend', 'attribution']\" class=\"var\" :key=\"mode\" @click=\"emitMode(mode)\">\n            {{formatMode(mode)}}\n        </button> -->\n\n        <div v-for=\"mode in Object.keys(visualizationMode)\" :key=\"mode\" class=\"var-container\">\n            <button v-if=\"!displayImage[mode]\" @click=\"toggleMode(mode)\" class=\"var\">\n                {{ formatMode(mode) }}\n            </button>\n            <img  v-else @click=\"toggleMode(mode)\" :src=\"getImage(mode)\" class=\"var-image\">\n        </div>\n    </div>\n</template>\n\n<script>\nexport default{\n    props: ['visualizationMode'],\n    // data(){\n    //     return{\n    //         visualizationMode: {\n    //             futureProjection: false,\n    //             confidence: false,\n    //             observedTrend: false,\n    //             attribution: false\n    //         }\n    //     }\n    // },\n    computed:{\n        displayImage(){\n            return{\n                futureProjection: this.visualizationMode.futureProjection,\n                confidence: this.visualizationMode.futureProjection && this.visualizationMode.confidence,\n                observedTrend: this.visualizationMode.observedTrend,\n                attribution: this.visualizationMode.observedTrend && this.visualizationMode.attribution\n            }\n        }\n    },\n    methods:{\n        emitMode(mode){\n            this.$emit('visualization-mode-changed', mode);\n        },\n        formatMode(mode) {\n            // Split the mode on each uppercase letter\n            const words = mode.replace(/([A-Z])/g, ' $1').trim();\n            // Capitalize the first letter of each word\n            return words.charAt(0).toUpperCase() + words.slice(1);\n        },\n        toggleMode(mode) {\n            this.$emit('visualization-mode-changed', mode, this.visualizationMode[mode]);\n        },\n        getImage(mode) {\n            // Dynamically import image based on the mode\n            return require(`@/assets/${mode}.png`)\n        },\n    }\n}\n</script>\n\n<style>\n.lengend{\n    background-color:rgb(241, 212, 216);\n    margin-left:10px;\n    text-align:center;\n    display: flex;\n    justify-content: center;\n    flex: 1;\n    align-items: center;\n    max-height: 100%;\n    margin-top: 10px;\n}\n\n.var-container{\n    display: flex;\n    justify-content: center;\n    width: 100%;\n}\n\n.var {\n  background-color: #FFFFFF;\n  border: 0;\n  border-radius: .5rem;\n  box-sizing: border-box;\n  color: #111827; \n  font-size: 1.2rem;\n  font-weight: 600;\n  line-height: 1.25rem;\n  padding: .75rem 1rem;\n  text-align: center;\n  text-decoration: none #D1D5DB solid;\n  text-decoration-thickness: auto;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  margin-left: 2%;\n  margin-right: 2%;\n  padding-top: 40px;\n  padding-bottom: 40px;\n  width: 80%;\n  height: 100%;\n\n}\n\n.var:hover {\n  background-color: rgb(249,250,251);\n}\n\n.var:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n.var:focus-visible {\n  box-shadow: none;\n}\n\n.var-image{\n    width: fit-content;\n    height: 120px;\n    object-fit: contain;\n}\n        \n</style>","import { render } from \"./AtlasLegend.vue?vue&type=template&id=a8a2ca7a\"\nimport script from \"./AtlasLegend.vue?vue&type=script&lang=js\"\nexport * from \"./AtlasLegend.vue?vue&type=script&lang=js\"\n\nimport \"./AtlasLegend.vue?vue&type=style&index=0&id=a8a2ca7a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"hexViz\" ref=\"hexContainer\">\n        Hey it's the onboarding for a single hexagon now!\n        <!-- <button @click=\"handleBackClick\">Back to Atlas</button> -->\n        <div v-if=\"explanationText\" class=\"explanatory-text\" v-html=\"explanationText\">\n        </div>\n        <div class=\"comment-info\">\n            *USING DATA OF GREENLAND/ICELAND(GIC) AS EXAMPLE\n        </div>\n    </div>\n</template>\n\n<script>\n    import * as d3 from 'd3';\n    import {regionsData} from '@/data/cidsData';\n\n    export default{\n        name:'HexViz',\n        props: ['selectedCids', 'visualizationMode','displayConfig'],\n        data(){\n            return{\n                regionData: null,\n                currentMode:'',\n                previousModeState:{},\n                // explanationText: \"\",\n            };\n        },\n        mounted() {\n            this.renderViz();\n            this.fetchRegionData('GIC');\n        },\n        watch:{\n            selectedCids:{\n                handler(){\n                    this.maybeClearCanvas();\n                    this.renderViz();\n                },\n                deep: true,\n                immediate: true\n            },\n            visualizationMode:{\n                handler(newVal){\n                    this.maybeClearCanvas();\n                    this.renderViz();\n                    // Compare newVal with the previous state\n                    const changedMode = Object.keys(newVal).find(mode => newVal[mode] !== this.previousModeState[mode]);\n                    console.log(this.changedMode)\n                    if (changedMode && newVal[changedMode]) { // Check if the mode has changed and is true\n                        this.currentMode = changedMode;\n                    }\n                    // Update the previous state with a deep copy of the new value\n                    this.previousModeState = {...newVal};\n                    \n                },\n                deep: true,\n                immediate: true\n            }\n        },\n        computed:{\n            explanationText() {\n                // Checking which mode is currently active from last to first and return the appropriate text\n                const modeDescriptions = {\n                    futureProjection: \"The normal triangle indicates the <strong>increasing</strong> trend of the CID in the future; \\nIt means <strong>decreasing</strong> trend if with the <strong>pedestal</strong>.\",\n                    confidence: \"Different sizes stand for different extents of confidence; \\n\\nThere are <strong>Low/Medium/High</strong> 3 different sizes.\",\n                    observedTrend: \"The direction of the arrow indicates the observed trend of CID in the past. \\n\\n<strong>Upward</strong> trend (arrow points to the edge of hexagon) \\n<strong>Downward</strong> trend (arrow points to the center of hexagon).\",\n                    attribution: \"If the arrow isn’t black, the color of the arrow shows there is <strong>additional evidence on attribution</strong> of this observed trend, and how the confidence of the attribution. \\n\\n<strong>Red</strong> arrow means a high confidence attribution; \\n<strong>Blue</strong> arrow means a low confidence attribution.\",\n                };\n                return this.currentMode ? modeDescriptions[this.currentMode] : \"\"; \n            }\n\n        },\n        methods:{\n            // To fetch the particular data matched the regionCode, we use GIC region for the onboarding system as the example\n            fetchRegionData(regionCode){\n                const region = regionsData.find(r => r.region === regionCode);\n                if(region){\n                    this.regionData = region.cids;\n                }\n            },\n            handleBackClick(){\n                this.$emit('backToAtlas');\n            },\n            maybeClearCanvas(){\n                // Clear the svg canvas only if a mode that requires exclusive drawing is actived\n                if(this.visualizationMode.confidence || this.visualizationMode.attribution){\n                    const container = d3.select(this.$refs.hexContainer);\n                    container.selectAll('svg').remove();\n                }\n            },\n            computeTrianglePoints(index, radius, centerX, centerY) {\n                // This is a placeholder function for computing triangle vertices\n                // To leave some margin for each triangle\n                radius = radius - 15;\n                const angle = Math.PI / 3 * index + Math.PI / 6;\n                const nextAngle = angle + Math.PI / 3;\n                return [\n                    [centerX, centerY], // center of the hexagon\n                    [centerX + radius * Math.cos(angle), centerY + radius * Math.sin(angle)],\n                    [centerX + radius * Math.cos(nextAngle), centerY + radius * Math.sin(nextAngle)]\n                ].map(point => point.join(',')).join(' ');\n            },\n            hexagonPoints(radius, centerX, centerY) {\n                return Array.from({ length: 6 }, (_, i) => {\n                    const angle = Math.PI / 3 * i - Math.PI / 2;\n                    return [\n                        centerX + radius * Math.cos(angle),\n                        centerY + radius * Math.sin(angle)\n                    ].join(',');\n                }).join(' ');\n            },\n            // To update the legend HEX for the users to refer to\n            updateLegendBars(svg, selectedCids, hexRadius, hexCenterX, hexCenterY){\n                const angleStep = Math.PI / 3;\n                const barThickness = 10;\n                const barLength = 70; // Length of the bar outside the hexagon\n\n                selectedCids.forEach((cidName, index) => {\n                    let color = this.determineColor(cidName);\n                    let startAngle = angleStep * index + Math.PI / 6; // Adjust angle for flat top hexagon\n                    // let endAngle = startAngle + angleStep;\n\n                    // Calculate start and end points for each bar\n                    let midX = hexCenterX + (hexRadius - 10) * Math.cos(startAngle + angleStep / 2);\n                    let midY = hexCenterY + (hexRadius - 10) * Math.sin(startAngle + angleStep / 2);\n\n                    // Determine rotation angle in degrees and add 90 degrees for parallel alignment\n                    let rotationAngle = (startAngle + angleStep / 2) * 180 / Math.PI + 90;\n\n                    // Draw the bar\n                    svg.append('rect')\n                        .attr('x', midX - barLength / 2)\n                        .attr('y', midY - barThickness / 2)\n                        .attr('width', barLength)\n                        .attr('height', barThickness)\n                        .attr('transform', `rotate(${rotationAngle},${midX},${midY})`)\n                        .style('fill', color);\n\n                    // Add text labels slightly below each bar for clarity\n                    // let textX = midX + (hexRadius-50) * Math.cos(startAngle + angleStep / 2);\n                    // let textY = midY + (hexRadius-50) * Math.sin(startAngle + angleStep / 2) + 10; // Adjusted for better visibility\n                    let lableX = hexCenterX - 10;\n                    let lableY = hexCenterY + 130 + index * 20;\n\n                    svg.append('text')\n                        .attr('x', lableX)\n                        .attr('y', lableY)\n                        .attr('text-anchor', 'middle')\n                        .style('fill', color)\n                        .style('font-size', '15px')\n                        .style('stroke', color)\n                        .style('stroke-width', 1)\n                        .text(cidName);\n                });\n            },\n            renderViz(){\n                const container = d3.select(this.$refs.hexContainer);\n                container.selectAll('svg').remove(); // To clear up the canva to redraw\n                this.explanationText = \"\";\n\n                // draw the d3 canvas\n                const svg = d3.select(this.$el) \n                .append('svg')\n                .attr('width', 1500)\n                .attr('height', 650)\n                .append('g')\n                .attr('transform', 'translate(20, 0)');\n\n                // basic settings for the lengend HEX\n                const lengendRadius = 70;\n                const lengendCenterX =150;\n                const lengendCenterY = 400;\n\n                // draw the legend HEX on the left\n                svg.append('polygon')\n                .attr('points',this.hexagonPoints(lengendRadius, lengendCenterX, lengendCenterY))\n                .attr('id','ice')\n                .style('stroke','darkgrey')\n                .style('fill','#E0E0E0')\n                .style('stroke-width',5);\n\n                // update the bars outside\n                this.updateLegendBars(svg, this.selectedCids, lengendRadius + 20, lengendCenterX, lengendCenterY);\n\n                // basic settings for the main HEX\n                const hexRadius = 225;\n                const hexCenterX = 700;\n                const hexCenterY = 280;\n\n                // Draw the main viz hexagon\n                svg.append('polygon')\n                .attr('points',this.hexagonPoints(hexRadius, hexCenterX, hexCenterY))\n                // .attr('transform',`translate(${hexCenterX}, ${hexCenterY})`)\n                .attr('id','bighex')\n                .style('stroke','darkgrey')\n                .style('fill','white')\n                .style('stroke-width',6);\n\n                // Draw the default background triangels\n                // Draw it manually cuz each triangle needs different offset\n                    svg.append('polygon')\n                    .attr('points', this.computeTrianglePoints(0, hexRadius - 8, hexCenterX + 3, hexCenterY + 5))\n                    .attr('fill','#CDCDCD')\n\n                    svg.append('polygon')\n                    .attr('points', this.computeTrianglePoints(1, hexRadius - 8, hexCenterX - 3, hexCenterY + 5))\n                    .attr('fill','#CDCDCD')\n\n                    svg.append('polygon')\n                    .attr('points', this.computeTrianglePoints(2, hexRadius - 8, hexCenterX - 6, hexCenterY))\n                    .attr('fill','#CDCDCD')\n\n                    svg.append('polygon')\n                    .attr('points', this.computeTrianglePoints(3, hexRadius - 8, hexCenterX - 3, hexCenterY - 5))\n                    .attr('fill','#CDCDCD')\n\n                    svg.append('polygon')\n                    .attr('points', this.computeTrianglePoints(4, hexRadius - 8, hexCenterX + 3, hexCenterY - 5))\n                    .attr('fill','#CDCDCD')\n\n                    svg.append('polygon')\n                    .attr('points', this.computeTrianglePoints(5, hexRadius - 8, hexCenterX + 6, hexCenterY))\n                    .attr('fill','#CDCDCD')\n\n                // Dynamically draw the triangles based on the selected CIDs and the main HEX\n                this.selectedCids.forEach((cidName, index) => {\n                    // To fetch cid data respectively\n                    const cidData = this.regionData.find(cid => cid.name === cidName);\n                    if(!cidData) {\n                        alert(cidName+\": Nodata!\");\n                        return;\n                    }\n\n                    // To compute the triangles vertices based on the index?\n                    // const strokeTrianglePoints = this.computeTrianglePoints(index, hexRadius, hexCenterX, hexCenterY);\n                    const baseTrianglePoints = this.computeTrianglePoints(index, hexRadius - 5, hexCenterX, hexCenterY);\n                    const futureTrianglePoints = this.computeTrianglePoints(index, hexRadius * 9 / 10, hexCenterX, hexCenterY);\n\n                    // Default triangle if no specific mode is activated\n                    if(Object.values(this.visualizationMode).every(v => !v)) {\n                        this.drawDefaultTriangle(svg, index, hexRadius, hexCenterX, hexCenterY, cidName);\n                    }\n\n                    // Handle Future Projection\n                    if(this.visualizationMode.futureProjection && (!this.visualizationMode.confidence)) {\n                        this.drawFutureProjectionTriangle(svg, baseTrianglePoints, futureTrianglePoints, cidData, cidName);\n\n                        // draw the explanation\n                        // this.drawExplanation(\"futureProjection\");\n                    }\n\n                    // Handle Confidence\n                    if(this.visualizationMode.confidence) {\n                        this.drawConfidenceTriangle(svg, index, cidData, cidName, hexRadius, hexCenterX, hexCenterY);\n\n                        // this.drawExplanation(\"confidence\");\n                    }\n\n                    // Handle Observed Trend\n                    if (this.visualizationMode.observedTrend) {\n                        if(cidData.observedTrend){\n                            this.drawTrendArrow(svg, cidData.observedTrend, index, hexRadius, hexCenterX, hexCenterY, 'black');\n                        }\n                        // Ensure there are default triangles when future projection is not activated\n                        if(!this.visualizationMode.futureProjection){\n                            this.drawDefaultTriangle(svg, index, hexRadius, hexCenterX, hexCenterY, cidName);\n                        }\n\n                        // this.drawExplanation(\"observedTrend\");\n                    }\n\n                    // Handle Attribution\n                    if(this.visualizationMode.attribution){\n                        if(!this.visualizationMode.futureProjection){\n                            this.drawDefaultTriangle(svg, index, hexRadius, hexCenterX, hexCenterY, cidName);\n                        }\n                        let color;\n                        if(cidData.attribution){\n                            switch(cidData.attribution){\n                                case 'high':\n                                    color = 'red';\n                                    break;\n                                case 'low':\n                                    color = 'blue';\n                            }\n                            this.drawTrendArrow(svg, cidData.observedTrend, index, hexRadius, hexCenterX, hexCenterY, color);\n                        }\n\n                        // this.drawExplanation(\"attribution\");\n                    }\n\n                })\n\n            },\n            drawDefaultTriangle(svg, index, radius, x, y, cidName) {\n                const {offsetX,offsetY} = this.determineOffset(index, x, y);\n\n                svg.append('polygon')\n                    .attr('points', this.computeTrianglePoints(index, radius - 10, offsetX, offsetY))\n                    .style('fill', 'none')\n                    .style('stroke', this.determineColor(cidName))\n                    .style('stroke-width', 5);\n\n            },\n            drawFutureProjectionTriangle(svg, pointsDefault, pointFuture, cidData, cidName) {\n                if(cidData.futureProjection === \"decreasing\"){\n                    svg.append('polygon')\n                    .attr('points', pointsDefault)\n                    .style('fill', '#666666')\n                    .style('stroke', '#666666')\n                    .style('stroke-width', 5);\n\n                    svg.append('polygon')\n                    .attr('points', pointFuture)\n                    .style('fill', this.determineColor(cidName))\n                    .style('stroke', 'white')\n                    .style('stroke-width', 5);\n                }\n                else{\n                    svg.append('polygon')\n                    .attr('points', pointsDefault)\n                    .style('fill', this.determineColor(cidName))\n                    .style('stroke', 'white')\n                    .style('stroke-width', 5);\n                }\n            },\n            drawConfidenceTriangle(svg, index, cidData, cidName, hexRadius, hexCenterX, hexCenterY) {\n                let confidenceRadius = this.getConfidenceRadius(cidData.confidence, hexRadius);\n                let confidencePoints = this.computeTrianglePoints(index, confidenceRadius, hexCenterX, hexCenterY);\n                let smallConfidencePoints = this.computeTrianglePoints(index, confidenceRadius * 9 / 10, hexCenterX, hexCenterY);\n                if(cidData.futureProjection === \"decreasing\"){\n                    svg.append('polygon')\n                        .attr('points', confidencePoints)\n                        .style('fill', '#666666')\n                        .style('stroke', '#666666')\n                        .style('stroke-width', 4);\n\n                    svg.append('polygon')\n                        .attr('points', smallConfidencePoints)\n                        .style('fill', this.determineColor(cidName))\n                        .style('stroke', 'white')\n                        .style('stroke-width', 4);\n                }\n                else{\n                    svg.append('polygon')\n                        .attr('points', confidencePoints)\n                        .style('fill', this.determineColor(cidName))\n                        .style('stroke', 'white')\n                        .style('stroke-width', 4);\n                }\n\n            },\n            getConfidenceRadius(confidence, hexRadius) {\n                switch (confidence) {\n                    case 'high': return hexRadius;\n                    case 'medium': return hexRadius * 2 / 3;\n                    case 'low': return hexRadius / 3;\n                    default: return 0;\n                }\n            },\n            drawTrendArrow(svg, trend, index, radius, centerX, centerY, color){\n            // Calculate start and end points based on the index for precise directional placement\n                const angle = Math.PI / 3 * index + Math.PI / 2 - Math.PI / 6; // adjust angle to align with hexagon side\n                const extendFactor = 0.5; // Extend the arrow slightly beyond the hexagon edge for clarity\n\n                // Settings of the upward trend arrow\n                let offset1 = 15\n                let startX = centerX + offset1 * Math.cos(angle) * extendFactor;\n                let startY = centerY + offset1 * Math.sin(angle) * extendFactor;\n                let endX = centerX + (radius+offset1) * Math.cos(angle) * extendFactor;\n                let endY = centerY + (radius+offset1) * Math.sin(angle) * extendFactor;\n\n                if (trend === 'downward') {\n                    // Swap start and end points for downward trend\n                    let offset2 = 60;\n                    [startX, endX] = [endX, startX];\n                    [startY, endY] = [endY, startY];\n                    startY = startY + offset2 * Math.sin(angle);\n                    startX = startX + offset2 * Math.cos(angle);\n                    endY = endY + offset2 * Math.sin(angle);\n                    endX = endX + offset2 * Math.cos(angle);\n                }\n\n                // Setup the arrow marker\n                // Ensure the unique id for each arrow marker\n                let arrowId = 'arrow'+ index + color;\n\n                let defs = svg.select('defs');\n                if(defs.empty()){\n                    defs = svg.append('defs');\n                }\n\n                // Check if marker already exists, if not, create a new marker\n                if(defs.select(`#${arrowId}`).empty()){\n                    defs.append('marker')\n                        .attr('id', arrowId)\n                        .attr('viewBox', '0 0 10 10')\n                        .attr('refX', 5)\n                        .attr('refY', 5)\n                        .attr('markerWidth', 6)\n                        .attr('markerHeight', 6)\n                        .attr('orient', 'auto')\n                        .append('path')\n                        .attr('d', 'M 0 0 L 10 5 L 0 10 Z')\n                        .style('fill', color);\n                }\n\n                // Draw the arrow line\n                svg.append('line')\n                    .attr('x1', startX)\n                    .attr('y1', startY)\n                    .attr('x2', endX)\n                    .attr('y2', endY)\n                    .style('stroke', color)\n                    .style('stroke-width', 4)\n                    .attr('marker-end', `url(#${arrowId})`);\n            },\n            drawExplanation(mode){\n                this.explanationText = \"\";\n                switch(mode){\n                    case \"futureProjection\" : this.explanationText =  \"The normal triangle indicates the <strong>increasing</strong> trend of the CID in the future; \\n\\nIt means <strong>decreasing</strong> trend if with the <strong>pedestal</strong>\"; break;\n                    case \"confidence\" : this.explanationText =  \"Different sizes stand for different  extents of confidence; \\n\\nThere are Low/Medium/High 3 different sizes\"; break;\n                    case \"observedTrend\" : this.explanationText =  \"The direction of the arrow indicates the observed trend of CID in the past. \\n\\n<strong>Upward</strong> trend (arrow points to the edge of hexogan)\\n<strong>Downward</strong> trend (arrow points to the center of hexogan);\"; break;\n                    case \"attribution\" : this.explanationText =  \"If the arrow isn’t black, the color of arrow shows there is <strong>additional evidence on attribution</strong> of this observed trend, and how the confidence of the attribution.\\n\\n<strong>Red</strong> arrow means a high confidence attribution; \\n<strong>Blue</strong> arrow means a low confidence attribution\"; break;\n                    case \"\" : break;\n                }\n            },\n            determineColor(cid) {\n                const colors = {\n                    'Cold spell': '#49D0AD',\n                    'River flood': '#FAA832',\n                    'Severe wind storm':'#B67FEA',\n                    'Permafrost':'#FF33B8',\n                    'Coastal flood':'#9ADF51',\n                    'Radiation at surface':'#ECDE2C',\n                    // More CIDs can be added here\n                };\n                return colors[cid] || '#eeeeee'; // Default color if CID is not found\n            },\n            determineOffset(index, x, y) {\n                let offsetX = x;\n                let offsetY = y;\n                switch (index) {\n                    case 0:\n                        offsetX = x + 3;\n                        offsetY = y + 5;\n                        break;\n                    case 1:\n                        offsetX = x - 3;\n                        offsetY = y + 5;\n                        break;\n                    case 2:\n                        offsetX = x - 6;\n                        break;\n                    case 3:\n                        offsetX = x - 3;\n                        offsetY = y - 5;\n                        break;\n                    case 4:\n                        offsetX = x + 3;\n                        offsetY = y - 5;\n                        break;\n                    case 5:\n                        offsetX = x + 6;\n                        break;\n                    default:\n                        break;  // Keeps original x, y if no case matches\n                }\n                return { offsetX, offsetY }; // Return modified coordinates as an object\n            }\n        },\n\n    }\n</script>\n\n<style>\n    .hexViz{\n        background-color: rgba(206, 221, 239, 0.424);\n        margin-left:10px;\n    }\n    .comment-info{\n        position: absolute;\n        bottom: 120px;\n        right: 30px;\n        text-align: right;\n        font-size: 15px;\n    }\n    .explanatory-text {\n        position:absolute;\n        bottom: 50%;\n        left: 78%; \n        width: 17%; /* Adjust width as needed */\n        text-align: left;\n        font-size: 25px;\n        color: #333;\n        background-color: rgba(255, 255, 255, 0.8);\n        padding: 10px;\n        padding-left: 15px;\n        border-radius: 5px;\n        white-space: pre-wrap;\n    }\n</style>","export const regionsData = [\n    {\n        region:\"GIC\",\n        cids:[\n            {            \n                name: \"Cold spell\",\n                futureProjection: \"decreasing\",\n                confidence: \"medium\",\n                observedTrend: \"downward\",\n                attribution: \"low\"\n            },\n            {\n                name: \"River flood\",\n                futureProjection: \"increasing\",\n                confidence: \"high\",\n                observedTrend: \"upward\",\n                attribution: \"\"\n            },  \n            {\n                name: \"Severe wind storm\",\n                futureProjection: \"increasing\",\n                confidence: \"low\",\n                observedTrend: \"\",\n                attribution: \"\"\n            }, \n            {\n                name: \"Permafrost\",\n                futureProjection: \"decreasing\",\n                confidence: \"high\",\n                observedTrend: \"downward\",\n                attribution: \"\"\n            },\n            {\n                name: \"Coastal flood\",\n                futureProjection: \"increasing\",\n                confidence: \"medium\",\n                observedTrend: \"\",\n                attribution: \"\"\n            }, \n            {\n                name: \"Radiation at surface\",\n                futureProjection: \"decreasing\",\n                confidence: \"medium\",\n                observedTrend: \"\",\n                attribution: \"\"\n            }, \n        ]\n    },\n    {\n        region: \"NSA\",\n        cids:[\n\n        ]\n    },\n\n];","import { render } from \"./HexViz.vue?vue&type=template&id=6cfcda94\"\nimport script from \"./HexViz.vue?vue&type=script&lang=js\"\nexport * from \"./HexViz.vue?vue&type=script&lang=js\"\n\nimport \"./HexViz.vue?vue&type=style&index=0&id=6cfcda94&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"viz\">\n        <br>\n        <input id=\"checkbox_toggle\" type=\"checkbox\" class=\"check\" :checked=\"isChecked\" @change=\"handleToggle\">\n        <div class=\"checkbox\">\n          <label class=\"slide\" for=\"checkbox_toggle\">\n            <div class=\"toggle\"></div>\n            <span class=\"text\">Atlas</span>\n            <span class=\"text\">Single Hexagon</span>\n          </label>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default{\n        // data(){\n        //     return{\n        //         isChecked:false\n        //     }\n        // },\n        props:['isChecked'],\n        name:'IntroTitle',\n        methods:{\n        handleClick(){\n            this.$emit('hexClicked');\n        },\n        handleBackClick(){\n            this.$emit('backToAtlas');\n        },\n        handleToggle(){\n            // if(this.isChecked){\n            //     this.$emit('hexClicked');\n            // }\n            // else {\n            //     this.$emit('backToAtlas');\n            // }\n            this.$emit('toggleChanged');\n        }\n\n        }\n    }\n</script>\n\n<style>\n.viz{\n    background-color:lightsteelblue;\n    margin-left:10px;\n}\n\n.checkbox {\n    width: 220px;\n    height: 40px;\n    background-color: #d0d0d0;\n    border-radius: 30px;\n    position: relative;\n    color: black;\n    overflow: hidden;\n    margin-left: 10px;\n  }\n  \n  #checkbox_toggle {\n    display: none;\n  }\n  \n  .checkbox .toggle {\n    width: 70px;\n    height: 30px;\n    position: absolute;\n    border-radius: 30px;\n    left: 5px;\n    cursor: pointer;\n    background: linear-gradient(40deg, #FF0080,#FF8C00 70%);\n    transition: 0.4s;\n    box-shadow: 0px 0px 3px rgb(255, 255, 20), 0px 0px 5px rgb(255, 255, 20);\n  }\n  \n  .checkbox .slide {\n    width: 227px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    cursor: pointer;\n  }\n  \n  .checkbox .slide .text {\n    font-size: 16px;\n    font-weight: 700;\n    z-index: 100;\n    cursor: pointer;\n  }\n  \n  .check:checked + .checkbox .slide .toggle {\n    transform: translateX(80px);\n    background: linear-gradient(40deg, #8983F7, #A3DAFB 70%);\n    box-shadow: -0px -0px 10px #8983F7, -0px -0px 3px #8983F7;\n    width: 130px;\n  }\n  \n  .check:checked + .checkbox .slide {\n    background-color: #33659b;\n    color: #fff;\n  }\n</style>\n","import { render } from \"./IntroTitle.vue?vue&type=template&id=1b7bfb74\"\nimport script from \"./IntroTitle.vue?vue&type=script&lang=js\"\nexport * from \"./IntroTitle.vue?vue&type=script&lang=js\"\n\nimport \"./IntroTitle.vue?vue&type=style&index=0&id=1b7bfb74&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AtlasView.vue?vue&type=template&id=2215db30\"\nimport script from \"./AtlasView.vue?vue&type=script&lang=js\"\nexport * from \"./AtlasView.vue?vue&type=script&lang=js\"\n\nimport \"./AtlasView.vue?vue&type=style&index=0&id=2215db30&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport AtlasView from '../views/AtlasView.vue';\n// import Vue from 'vue';\n// import Router from 'vue-router';\n//import About from '../views/AboutView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  },\n  {\n    // Direct to the view of Atlas\n    path:'/atlas',\n    name: 'atlas',\n    component: AtlasView\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\ncreateApp(App).use(router).mount('#app')\n","var map = {\n\t\"./SHA.png\": 104,\n\t\"./attribution.png\": 333,\n\t\"./confidence.png\": 1292,\n\t\"./futureProjection.png\": 1510,\n\t\"./logo.png\": 3153,\n\t\"./observedTrend.png\": 3955\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 715;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"about\" + \".\" + \"5ae81226\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"client:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkclient\"] = self[\"webpackChunkclient\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(5170); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["style","_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_component_router_view","script","__exports__","render","class","alt","src","_imports_0","_component_HelloWorld","msg","href","target","rel","_toDisplayString","$props","_hoisted_3","_hoisted_4","name","props","String","components","HelloWorld","_component_AtlasSidebar","onCidSelectionChanged","$options","updateSelectedCIDs","ref","_component_AtlasLegend","$data","visualizationMode","onVisualizationModeChanged","updateActiveVisualizationMode","_component_IntroTitle","isChecked","isHexVizActive","onToggleChanged","handleToggle","onHexClicked","handleHexClick","onBackToAtlas","handleBackToAtlas","_createBlock","_resolveDynamicComponent","currentComponent","selectedCIDs","currentDisplayConfig","position","_renderList","categories","category","index","key","_normalizeStyle","backgroundColor","getCategoryColor","height","calculateBarHeight","items","length","item","type","$event","selected","id","onChange","_cache","args","emitSelectedCIDs","disabled","_hoisted_5","for","_hoisted_6","data","seleted","methods","selectedItems","this","forEach","push","$emit","resetCheckboxes","categoryName","itemCount","baseHeight","template","mounted","renderViz","watch","handler","deep","handleClick","handleBackClick","container","d3","$refs","vizContainer","selectAll","remove","svg","$el","append","attr","hexagonPoints","radius","halfWidth","Math","sqrt","drawAtlas","hexRadius","x","y","dx","dy","x2","y2","x3","y3","x4","y4","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","x10","y10","x11","y11","x12","y12","x13","y13","x14","y14","x15","y15","x16","y16","x17","y17","x18","y18","x19","y19","x20","y20","x21","y21","x22","y22","x23","y23","x24","y24","x25","y25","x26","y26","x27","y27","x28","y28","x29","y29","x30","y30","x31","y31","x32","y32","x33","y33","x34","y34","x35","y35","x36","y36","x37","y37","x38","y38","x39","y39","x40","y40","x41","y41","x42","y42","x43","y43","x44","y44","x45","y45","x46","y46","x47","y47","select","on","Object","keys","mode","displayImage","onClick","toggleMode","getImage","formatMode","computed","futureProjection","confidence","observedTrend","attribution","emitMode","words","replace","trim","charAt","toUpperCase","slice","require","explanationText","innerHTML","_createCommentVNode","regionsData","region","cids","regionData","currentMode","previousModeState","fetchRegionData","selectedCids","maybeClearCanvas","immediate","newVal","changedMode","find","console","log","modeDescriptions","regionCode","r","hexContainer","computeTrianglePoints","centerX","centerY","angle","PI","nextAngle","cos","sin","map","point","join","Array","from","i","updateLegendBars","hexCenterX","hexCenterY","angleStep","barThickness","barLength","cidName","color","determineColor","startAngle","midX","midY","rotationAngle","lableX","lableY","text","lengendRadius","lengendCenterX","lengendCenterY","cidData","cid","alert","baseTrianglePoints","futureTrianglePoints","values","every","v","drawDefaultTriangle","drawFutureProjectionTriangle","drawConfidenceTriangle","drawTrendArrow","offsetX","offsetY","determineOffset","pointsDefault","pointFuture","confidenceRadius","getConfidenceRadius","confidencePoints","smallConfidencePoints","trend","extendFactor","offset1","startX","startY","endX","endY","offset2","arrowId","defs","empty","drawExplanation","colors","_createStaticVNode","checked","AtlasSidebar","AtlasViz","AtlasLegend","HexViz","IntroTitle","newValue","generateDisplayConfig","resetAllStates","sidebarComponent","routes","path","component","HomeView","AtlasView","router","createRouter","history","createWebHistory","process","createApp","App","use","mount","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","splice","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","value","p","installedChunks","installedChunkData","promise","reject","error","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}